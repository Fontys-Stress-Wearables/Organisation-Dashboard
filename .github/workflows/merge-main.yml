name: ci-cd-flow

on:
  push:
    branches: [main]
    tags: ['v*.*.*']
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Development Code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 17.x

      - name: Install dependencies
        run: npm install

      - name: Build
        run: npm run build --if-present
        env:
          CI: false

      - name: Check linting and formatting
        # Custom script for checking the linting and formatting being in place
        run: npm run lint

      - name: Persist workflow data as artifact
        uses: actions/upload-artifact@v3
        with:
          name: organisation-dashboard-merge-artifact
          path: ./build

  codeQL-analyse:
    name: CodeQL-Analyse
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - uses: actions/checkout@v3
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: javascript
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  # define job to build and publish docker image
  build-and-push-docker-image:
    name: Build Docker image and push to repository
    needs: [build, codeQL-analyse]
    # run only when code is compiling and tests are passing
    runs-on: ubuntu-latest

    # steps to perform in job
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Registry
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker Metadata
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build image and push
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          # relative path to the place where source code with Dockerfile is located
          context: .
          file: ./Dockerfile

          # Note: tags has to be all lower-case
          tags: ${{steps.meta.outputs.tags}}
          labels: ${{steps.meta.output.labels}}

          # build on feature branches, push only on master branch
          push: ${{ github.ref == 'refs/heads/main' }}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
